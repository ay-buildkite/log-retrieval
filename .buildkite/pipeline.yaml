---
steps:
  - label: ':hammer: Generate test logs'
    key: generate-logs
    command: |
      echo "Testing some formatted output:"
      echo -e "Line 1\nLine 2\tTabbed\rCarriage Return"
      echo "=== Some more test data ==="
  - label: ':mag: Retrieve and clean logs'
    depends_on: generate-logs
    command: |-
      # Method 1: using curl + jq
      echo "--- Testing curl + jq method"
      BUILD_URL="https://api.buildkite.com/v2/organizations/$BUILDKITE_ORGANIZATION_SLUG/pipelines/$BUILDKITE_PIPELINE_SLUG/builds/$BUILDKITE_BUILD_NUMBER"
      curl -H "Authorization: Bearer $BUILDKITE_TOKEN" "$BUILD_URL/jobs/generate-logs/log" | jq -r '.content' > curl_cleaned_logs.txt

      # Method 2: using sed
      echo "--- Testing sed method"
      curl -H "Authorization: Bearer $BUILDKITE_TOKEN" "$BUILD_URL/jobs/generate-logs/log" > raw_logs.txt
      sed -e 's/\\n/\n/g' -e 's/\\r//g' raw_logs.txt > sed_cleaned_logs.txt
      cat sed_cleaned_logs.txt

      # Method 3: using buildkite-agent
      echo "--- Testing buildkite-agent method"
      if command -v buildkite-agent &> /dev/null; then
        buildkite-agent step get logs --build $BUILDKITE_BUILD_ID --step generate-logs > agent_cleaned_logs.txt
        cat agent_cleaned_logs.txt
      else
        "buildkite-agent command not found"
      fi
